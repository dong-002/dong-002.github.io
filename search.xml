<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>主题修改</title>
      <link href="/2022/10/11/zhu-ti-xiu-gai/"/>
      <url>/2022/10/11/zhu-ti-xiu-gai/</url>
      
        <content type="html"><![CDATA[<p>最近折腾了一下怎么搭建博客，记录一下吧。这里用的是hexo框架搭建的，主题为matery，整个搭建过程都是一边看着网上的教程弄的，但是有些地方是弄了很久才弄出来的，这里只是记录一下修改的过程，搭建和部署到GitHub上网上就有很多。</p><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><p>在根目录下有一个名为<code>_config.yml</code>的文件，在里面可以修改主页的标题等。<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011105118770.png"></p><p>然后在<code>themes</code>下也有一个<code>_config.yml</code>的文件，在这面是修改主题相关的部分。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011105425467.png"></p><h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>在<code>_config.yml</code>文件中有一个轮换图是否开启，我把他设置为了false<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011110208423.png"></p><p>然后在layout文件夹中的_partial中的bg-cover-content.ejs文件中可以设置轮换的图片，原来我想设置为两边有箭头可以手动轮换的，但是不知道怎么做，于是就把上面设置为false然后把图中的图片换为自己的了。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011111006408.png"></p><p>其实还可以设置背景图，原来背景是没有的只是纯色，上面更换的只是轮播图。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011111407726.png"></p><p>找到themes下的source中的css文件夹中的matery，在里面可以修改整个主题的样式，ctrl+f5搜索body可以定位到body样式，把他修改为如下（这里我也是在网上找的）</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* background-color: #eaeaea;    margin: 0;    color: #34495e;    overflow-x: hidden;    overflow-y: auto; */</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>60deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 165<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span> 5%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 228<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.35<span class="token punctuation">)</span><span class="token punctuation">)</span> 0% 0% / cover<span class="token punctuation">,</span>  <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"../medias/cover.jpg"</span><span class="token punctuation">)</span></span> 0px 0px<span class="token punctuation">;</span>    <span class="token comment">/* background: linear-gradient(60deg, rgba(255, 165, 150, 0.8) 5%, rgba(0, 228, 255, 0.35)) 0% 0% / cover,  url("https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg") 0px 0px; */</span>    <span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #7F95D1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图标链接"><a href="#图标链接" class="headerlink" title="图标链接"></a>图标链接</h3><p>在右上角中有一个GitHub的图标，我觉得不好看就把他去掉了。同样在_partial文件中的header.ejs中把下面注释掉</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011112413518.png"></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011112338263.png"></p><p>在轮播图中也有很多链接，你可以在主题中的_config.yml文件中修改</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011112658327.png"></p><h3 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h3><p>原来我也没怎么注意，有个舍友说滚动条太丑了，于是就在网上找了修改方法。在matery.css文件中加上下面的代码就可以修改滚动条</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 滚动条颜色 */</span><span class="token selector">::-webkit-scrollbar-thumb</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #c6ef65<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 滚动条的背景颜色 */</span><span class="token selector">::-webkit-scrollbar-track</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #ffcacaff<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 滚动条的大小 */</span><span class="token selector">::-webkit-scrollbar</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="底部"><a href="#底部" class="headerlink" title="底部"></a>底部</h3><p>在_partial文件夹中footer.ejs可以修改底部，我把hexo和主题链接去掉了<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011130229482.png"></p><p>统计访问人数在themes文件夹下面的_config.yml可以修改<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011150735395.png"></p><h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3><p>在手机上的样式会有一点不一样，手机上的菜单变为侧边了，多了一个GitHub链接<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221012195757421.png"></p><p>这个是在_partial下的mobile-nav.ejs里面进行修改的，我不想要就把他注释掉了<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221012200053250.png"></p><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>原来的搜索功能是不能用的，要下载插件才能使用，打开终端执行如下命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-search<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在根目录下的_config.yml文件中添加如下的代码</p><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h3><p>发布文章可以看到时间和字数等<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011152314143.png"></p><p>在终端中输入如下命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在themes文件夹中修改_config.yml文件，ctrl+f5查找wordcount进行修改</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 发布日期</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 更新日期</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 文章字数统计</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 站点总文章字数</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 文章阅读时长</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 文章阅读次数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="中文链接"><a href="#中文链接" class="headerlink" title="中文链接"></a>中文链接</h3><p>好像说文章发布会生成的链接中会出现中文，可以通过插件hexo-permalink-pinyin将中文改为拼音，终端输入如下命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-permalink-pinyin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在根目录下_config.yml文件添加如下配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h3><p>订阅功能要配合插件hexo-generator-feed进行使用，终端中执行如下命令：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-generator-feed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在根目录下的_config.yml文件添加如下配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 订阅</span><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><p>原来是只有首页可以使用，头部中的其他页面是要自己创建的（实现代码别人已经写好，只要一两句简单代码就可）<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011154509445.png"></p><p>新建标签页:在终端中执行如下命令:</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;tags&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后可以在根目录下的source文件夹中看到一个tags文件夹，把index.md修改为如下:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-10-05 19:11:26</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他页面的新建也是如此，分类categories、关于about、留言板contact、友情链接friends、还要有一个404页面</p><h3 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h3><p>在创建了contact页面后还不能使用留言功能，刚开始我是想用gittalk的，但是弄了没有成功。后面换为了valine，这个还是挺好弄的，在网上找教程跟着弄就好。在此过程中遇到了一些问题，首先可以在layout文件夹下面的contact.ejs文件中可以修改属性<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011192054369.png"></p><p>按照网上教程弄好之后发现留言功能在文章可以出现，友情链接也可以出现，但就是在留言板页面中没有<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011192351739.png"></p><p>找到layout文件夹下的contact文件ctrl+f5查找card找到图中的地方添加红色部分的代码，这样在留言板中就可以看到留言功能。<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011192735039.png"></p><p>下面来说一下QQ头像获取功能，首先在主题下的_config.yml文件中找到下面的代码，添加最后一行<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/tempsnip.png"></p><p>然后在主题下的source的libs中找到valine.min.js搜索vimg可以找到下面的代码(先格式化一下代码)<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011194531510.png"></p><p>然后往上几行可以看到如下代码：<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011194906545.png"></p><p>在他t.get(‘link’)上一行新增如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> qq_img <span class="token operator">=</span> <span class="token constant">B</span><span class="token punctuation">.</span>cdn <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'mail'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">B</span><span class="token punctuation">.</span>params              <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'mail'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'@qq.com'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> prefix <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'mail'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">@.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment">//前缀</span>                <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\d+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span> <span class="token comment">//正则表达式</span>                <span class="token keyword">var</span> result <span class="token operator">=</span> prefix<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span> <span class="token comment">//match 是匹配的意思</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  qq_img <span class="token operator">=</span> <span class="token string">'//q1.qlogo.cn/g?b=qq&amp;nk='</span> <span class="token operator">+</span> prefix <span class="token operator">+</span> <span class="token string">'&amp;s=100'</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><center>**注意复制上面代码时要查看前面的字母是否和原来的相同**</center><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011195555462.png"></p><p>把原来的<code>B.cdn + (0, u.default)(t.get(&#39;mail&#39;)) + B.params</code>更换为qq_img<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011195934622.png"></p><p>填写qq邮箱之后可以看到评论中显示qq头像<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011200831806.png"></p><p>在_partial下的valine.ejs找到如下的代码进行修改，requiredFields是必填项，meta是叫你填的信息。详细内容可以到官网去看<a href="https://valine.js.org/configuration.html#meta">valine</a></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221011201015359.png"></p><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><p>新建文章的命令是<code>hexo new &quot;标题&quot;</code>，然后可以在根目录source下的_posts看到新建的文章，可以用typora打开这个文章进行编写。可以为文章添加tags和分类，想一个文章分在不同的分类可以设置，按照如下格式。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 主题修改<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-10-11 10:34:00</span><span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> matery<span class="token punctuation">-</span> hexo<span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token punctuation">[</span>随笔<span class="token punctuation">]</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a>时钟</h3><p>在网上看到一个小案例觉得蛮有趣的，就拿来挂在上面了。（一下代码都是照网上修改得来）</p><p>首先找到_partial下的index-cover.ejs文件，在所示添加HTML代码<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221016164801924.png"></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 时钟  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clock-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">--clr</span><span class="token punctuation">:</span> #ff2972</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 圆点 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dots h_dot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 可缩放矢量图 成为dom的一部分 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hours<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">--clr</span><span class="token punctuation">:</span> #fee880</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dots m_dot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>minutes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">--clr</span><span class="token punctuation">:</span> #29ff86</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dots s_dot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>seconds<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 时钟结束 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>$(function () &#123;&#125;)</code>的后面添加js代码<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20221016163726875.png"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 时钟</span>    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> hours <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'hours'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> minutes <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'minutes'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> seconds <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'seconds'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 小于10前面+0</span>        h <span class="token operator">=</span> h <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> h <span class="token operator">:</span> h        m <span class="token operator">=</span> m <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> m <span class="token operator">:</span> m        s <span class="token operator">=</span> s <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> s <span class="token operator">:</span> s        hours<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> h<span class="token operator">+</span><span class="token string">"&lt;br>&lt;span>Hours&lt;/sapn>"</span>        minutes<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> m<span class="token operator">+</span><span class="token string">"&lt;br>&lt;span>Minutes&lt;/sapn>"</span>        seconds<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> s<span class="token operator">+</span><span class="token string">"&lt;br>&lt;span>Seconds&lt;/sapn>"</span>        <span class="token keyword">let</span> hh<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'hh'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> mm<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'mm'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> ss<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ss'</span><span class="token punctuation">)</span>        <span class="token comment">// 这里的315要和css中的315相同</span>        hh<span class="token punctuation">.</span>style<span class="token punctuation">.</span>strokeDashoffset<span class="token operator">=</span><span class="token number">315</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">315</span><span class="token operator">*</span>h<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">24</span>        mm<span class="token punctuation">.</span>style<span class="token punctuation">.</span>strokeDashoffset<span class="token operator">=</span><span class="token number">315</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">315</span><span class="token operator">*</span>m<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60</span>        ss<span class="token punctuation">.</span>style<span class="token punctuation">.</span>strokeDashoffset<span class="token operator">=</span><span class="token number">315</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">315</span><span class="token operator">*</span>s<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在最后添加css样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;!-- 时钟 -->&lt;style>    .clock-container</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token comment">/* justify-content: center;    align-items: center; */</span>    <span class="token comment">/* background-color: transparent; */</span><span class="token punctuation">&#125;</span><span class="token selector">#time</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token comment">/* gap: 40px; */</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 9<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time .circle</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time .circle svg</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time .circle svg circle</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">stroke</span><span class="token punctuation">:</span> #474747<span class="token punctuation">;</span>    <span class="token property">stroke-width</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>5px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time .circle svg circle:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--clr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 315<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time div</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time div span</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 0.5rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#time #hours,#time #minutes,#time #seconds</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 47px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文章：<a href="https://www.matemaster.cn/posts/43043.html#toc-heading-1">https://www.matemaster.cn/posts/43043.html#toc-heading-1</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack介绍</title>
      <link href="/2022/10/06/webpack-jie-shao/"/>
      <url>/2022/10/06/webpack-jie-shao/</url>
      
        <content type="html"><![CDATA[<p>webpack是一个可以将项目进行规范化、将项目打包压缩的工具</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>终端使用<code>npm init -y</code>在项目中建立package.json来记录项目，使用<code>npm i webpack webpack-cli -D</code>将webpack包放到devDependencies中，在项目根目录下建立一个webpack.config.js的文件</p><p>里面有两个参数可选，development在开发的时候用打包速度快 production在发布的时候使用 可以进行压缩 体积小</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220810001403153.png"></p><p>然后再package.json中找到scripts节点，添加如下属性</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220810001609715.png"></p><p>在终端中运行<code>npm run dev</code>命令，这样项目就自动打包，将src中的index.js的文件打包放到dist中的main.js中。可以在webpack.config.js文件中配置要打包的文件和放到哪里。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><h4 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h4><p>每次修改代码都要重新执行<code>npm run dev</code>这样很麻烦，可以安装插件当代码改变是自动执行，<code>npm i webpack-dev-server -D</code>下载插件然后再package.json中dev加多一个如下配置，但是要在<a href="http://localhost:8080/%E4%B8%AD%E6%89%93%E5%BC%80%E3%80%82**%E5%B9%B6%E4%B8%94HTML%E4%B8%AD%E5%BC%95%E5%85%A5%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%94%B9%E4%B8%BA/index.js**%EF%BC%8C%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%E6%96%B0%E7%94%9F%E6%88%90%E7%9A%84index.js%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%EF%BC%8C%E4%B8%8D%E5%9C%A8%E7%A3%81%E7%9B%98%E4%B8%8A%E3%80%82">http://localhost:8080/中打开。**并且HTML中引入的连接改为/index.js**，这是因为新生成的index.js在内存中，不在磁盘上。</a></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220810164843354.png"></p><h4 id="html-webpack-plugin"><a href="#html-webpack-plugin" class="headerlink" title="html-webpack-plugin"></a>html-webpack-plugin</h4><p>打开网址还要点到index.html文件中才能看到页面，通过<code>npm i html-webpack-plugin</code>安装插件，然后在webpack.config.js文件中配置</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入构造函数</span><span class="token keyword">const</span> HtmlPlugin<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token comment">// 创建实例对象</span><span class="token keyword">const</span> htmlPlugin<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HtmlPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span> <span class="token comment">//指定文件</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'./index.html'</span> <span class="token comment">//生成的文件</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token comment">// development是开发  production是上线后 两个参数可以选择</span>    <span class="token comment">//development在开发的时候用打包速度快 production在发布的时候使用 可以进行压缩 体积小</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>htmlPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//使htmlPlugin生效</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样<code>npm run dev</code>然后打开<a href="http://localhost:8080/%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%A1%B5%E9%9D%A2%E3%80%82">http://localhost:8080/就可以看到页面。</a></p><p>在module.exports中配置一个如下节点可以自动打开浏览器</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 运行npm run dev自动打开浏览器</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 端口号</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>    <span class="token comment">// 打开浏览器时用什么域名或IP地址</span>    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">'localhost'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h4><p>webpack只能处理js文件，其他不是js的文件不能处理，要通过loader进行打包处理。</p><p>所有的css,less文件不在index.html文件中引入，在index.js文件import引入，然后通过loader和webpack处理会自动引入到index.html文件中。<img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220810214101643.png"></p><p>打包css文件：<code>npm i style-loader css-loader -D</code>下载插件，然后在webpack.config.js文件中加多一个节点</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// 以.css后缀结尾的文件  使用的loader 顺序不能改变</span>            <span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打包less文件：<code>npm i less-loader less -D</code>，然后在webpack.config.js文件中加多一个节点</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// 以.css后缀结尾的文件  使用的loader</span>            <span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">,</span><span class="token string">'less-loader'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打包图片：<code>npm i url-loader file-loader -D</code>，然后在webpack.config.js文件中加多一个节点</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// 以.css后缀结尾的文件  使用的loader</span>            <span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">,</span><span class="token string">'less-loader'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token comment">// 图片                      表示小于等于多少字节才转换为base64格式</span>            <span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.jpg|png|gif$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'url-loader?limit=10000'</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>处理高级的ES6语法：<code>npm i babel-loader @babel/core @babel/plugin-proposal-decorators -D</code>，添加节点</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 将ES6高级语法处理 除掉第三方包不用管</span><span class="token punctuation">&#123;</span><span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span><span class="token string">'babel-loader'</span><span class="token punctuation">,</span><span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在根目录下新建babel.config.js文件，配置如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'@babel/plugin-proposal-decorators'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">legacy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>&#x3D;&#x3D;其实在开发中很少自己配置webpack，一般用插件一键生成的，重点在于理解&#x3D;&#x3D;</p><h4 id="进行发布"><a href="#进行发布" class="headerlink" title="进行发布"></a>进行发布</h4><p>项目完成后要将项目进行发布，在package.json中配置如下，–mode production指的是将代码压缩，然后执行<code>npm run build</code>，在根目录下出现一个dist文件夹里面是进行压缩的文件。<code>npm run dev</code>是在开发阶段使用，添加<strong>serve</strong>打包的代码会存储在内存中，build属性中没有serve，执行<code>npm run bulid</code>会在磁盘上生成dist文件夹。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220811002432483.png"></p><h4 id="source-map"><a href="#source-map" class="headerlink" title="source-map"></a>source-map</h4><p>在调试时显示出错的行号和源码行号对应不上，因此在webpack.config.js文件中配置节点</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在开发阶段可以查看出错的行号</span><span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-source-map'</span><span class="token punctuation">,</span><span class="token comment">//在发布时上面的做法会显示源码 改为下面的</span><span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'nosources-source-map'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli创建项目</title>
      <link href="/2022/10/06/vue-cli-chuang-jian-xiang-mu/"/>
      <url>/2022/10/06/vue-cli-chuang-jian-xiang-mu/</url>
      
        <content type="html"><![CDATA[<p>在实际项目中都是用vue-cli进行搭建项目，不用自己配置webpack。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>使用<code>npm i @vue/cli -g</code>命令全局安装vue-cli，如果下载慢的话可以换为淘宝镜像。下载完成可以查看版本号</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817090329853.png"></p><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><p>在想要创建项目的目录下输入cmd，然后在终端中使用命令<code>vue create 项目名称</code></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817090031851.png"></p><p>我在终端中输入<code>vue create demo</code>然后出现了下面的选项，第一个是vue 3，第二个是vue 2，最后一个是手动配置，这里我们选择最后一个。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817090523474.png"></p><p>然后又出现了下面的选项，刚开始学习我们选中图中的两项，后面有需要再选择其他，按空格键进行选择</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817090916549.png"></p><p>后面出现下图选项，我们选择vue 2版本</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817091143760.png"></p><p>叫你选择哪个插件，这里选择less</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817091546255.png"></p><p>把选择的配置放到哪里，这里选择第一个放到一个独立的文件中</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817091701710.png"></p><p>是否选择把这次的配置保存下来，以后可以使用相同的配置</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817092223551.png"></p><p>填写一个名称，之后就会安装配置选项</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817092336121.png"></p><p>执行下面两个命令就可以将项目跑起来（可以使用vs code打开项目文件然后在终端执行<code>npm run serve</code>）</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817092850572.png"></p><p>不要关闭终端，关闭之后相当于把服务器关掉了。然后在浏览器中输入第一个local网址就可以看到项目</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220817093057572.png"></p><hr><h4 id="vite"><a href="#vite" class="headerlink" title="vite"></a>vite</h4><p>上面的步骤太过繁琐，并且vue-cli的速度会比较慢，现在有了更好的vite。</p><p>首先安装<code>npm i vite -g</code>进行全局安装，然后执行<code>npm create vite@latest 项目名 -- --template vue</code>就可以创建一个项目，进入目录然后执行<code>npm i</code>下载依赖包，执行<code>npm run dev</code>运行项目</p><p>在使用element-plus的时候有全部导入和按需导入，在按需导入的时候出现了一些问题，记录一下。</p><p>首先创建vite.config.js文件，然后按照官网配置</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineConfig <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vite'</span><span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">'unplugin-auto-import/vite'</span><span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">'unplugin-vue-components/vite'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElementPlusResolver <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'unplugin-vue-components/resolvers'</span><span class="token comment">//这个包也要下载</span><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">'@vitejs/plugin-vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 这里是一定要的</span>    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm的使用</title>
      <link href="/2022/10/06/npm-de-shi-yong/"/>
      <url>/2022/10/06/npm-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>npm是一个包管理工具，所谓的包也就是第三方模块，好比如jQuery这些，当然我们也可以自定义模块，但是在实际应用中都是导入包来实现功能。npm是跟随着node.js的下载而有的，可以通过npm -v来查看版本号。</p><h4 id="项目新建"><a href="#项目新建" class="headerlink" title="项目新建"></a>项目新建</h4><p>在新建项目时在项目根目录用终端执行npm init -y来创建一个package.json文件，这个文件用来记录这个项目用到了哪些包，这些包都在node_modules文件中存放。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220731171811789.png"></p><h4 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h4><p>项目中由于包占用的内存太大，用git提交项目要把node_modules文件包含在gitignore中，这样就省略所用的包，只是包源码提交，从Gitee或GitHub下载项目只是源码，要在终端执行<code>npm install</code>命令就会自动下载项目所依赖的包，这样项目才能跑起来。</p><p>package.json文件中的dependencies记录了下载了哪些包和版本号，例如下面就是用到了jQuery包。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220731172100367.png"></p><h4 id="存放到Dev"><a href="#存放到Dev" class="headerlink" title="存放到Dev"></a>存放到Dev</h4><p>在开发用到的包但是在项目上线后不再使用放到devDependencies节点中，在项目上线后还要使用的就放到dependencies节点中。</p><p>使用npm i 包名 -D这样就会自动把包放到Dev节点中。</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220731172943102.png"></p><h4 id="删除包"><a href="#删除包" class="headerlink" title="删除包"></a>删除包</h4><p>不使用包可以通过npm unistall 包名来删除对应的包，这样还会在dependencies中删除包的名字。</p><hr><h4 id="淘宝镜像npm"><a href="#淘宝镜像npm" class="headerlink" title="淘宝镜像npm"></a>淘宝镜像npm</h4><p>由于原来的npm下载包是在国外的服务器所以下载得比较慢，但是在国内淘宝做了一个镜像同步国外的npm，我们可以通过切换下载的镜像源为淘宝，这样就可以提高速度。</p><p>查看镜像源 <code>npm config get registry</code></p><p>将镜像源改为淘宝镜像 <code>npm config set registry=https://registry.npm.taobao.org/</code></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220731174912803.png"></p><p>将镜像源切换为国内之后下载速度就会提高。</p>]]></content>
      
      
      <categories>
          
          <category> 技能学习 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的简单使用</title>
      <link href="/2022/10/06/git-de-jian-dan-shi-yong/"/>
      <url>/2022/10/06/git-de-jian-dan-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>Git是一个分布式版本控制系统，分布式就是每个客户端都保存版本，当然服务器上也保存版本，但是当服务器发生问题时可以从客户端得到完整版本，不用担心版本丢失。</p><hr><p>设置账号名和邮箱，在将文件提交到仓库中时需要提供账号和邮箱，记录谁干了什么。</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;账号&quot;git config --global user.email &quot;邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>与Gitee绑定</strong></p><ul><li><p>生成密钥： <code>ssh-keygen -t rsa</code> 输入之后按下三次回车</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230657692.png"></p></li><li><p>查看密钥： <code>cat ~/.ssh/id_rsa.pub</code></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230729155.png"></p></li><li><p>Gitee中的ssh公钥：登录码云，将上面的密钥复制到ssh公钥中</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230757326.png"></p><p>这样本地仓库就和Gitee绑定了。</p></li></ul><p>Git的仓库可以从其他服务器上克隆一个或者将本地的一个文件夹作为新的仓库。</p><ul><li><p>克隆：git clone +远程仓库地址。将Gitee中的仓库地址复制，这样就把远程仓库复制到了本地</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230808406.png"></p><ul><li>新的仓库：<ol><li>首先 git init 将本地仓库初始化</li><li>git remote add origin +远程仓库地址。这样本地仓库就和远程仓库关联起来</li></ol></li></ul><h4 id="Git的一些简单命令"><a href="#Git的一些简单命令" class="headerlink" title="Git的一些简单命令"></a>Git的一些简单命令</h4></li></ul><ol><li><p>将工作区文件添加到暂存区：git add +文件名 | git add .是全部文件</p></li><li><p>将暂存区文件添加到Git仓库：git commit -m “这里是对提交文件的描述，可以不写”</p></li><li><p>连接远程仓库：git remote add origin +远程仓库地址</p></li><li><p>将本地仓库中的文件提交到远程仓库(要在关联的情况下)：<code>git push origin master</code></p></li><li><p>查看状态：<code>git status | git status -s</code> 是简洁查看</p></li><li><p>查看提交记录：<code>git log</code></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230814664.png"></p><p>上面划线的是提交版本ID</p></li><li><p>版本回退：</p><ul><li><code>git reset --hard head^</code> 回退到上个版本</li><li><code>git reset --hard head^^</code> 回退到上上个版本</li><li>git reset –hard +版本ID 回退到确定的版本</li></ul></li><li><p>在回退版本中查看提交记录：<code>git reflog</code></p></li><li><p>撤销工作区中修改：git checkout –文件名</p></li><li><p>取消暂存区中文件：git reset HEAD +文件名</p></li><li><p>从工作区直接到git仓库：git commit -a -m “描述”</p></li><li><p>删除文件：</p><ul><li>git rm -f 文件名   删除工作区和仓库的文件</li><li>git rm –cached 文件名   只删除仓库文件</li></ul></li><li><p>忽略文件：创建一个名为.gitignore的文件，在这个文件中定义不用提交的文件，提交时就不会提交对应的文件。</p></li><li><p>查看连接的远程仓库：<code>git remote -v</code></p></li></ol><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><p>开发项目时首先在master主分支创建自己的分支，自己负责的部分完成后将自己的分支合并到master主分支，这样每个人的工作没有相互影响。</p><ul><li>查看分支情况：git branch    前面有*的表示当前所在分支</li><li>创建分支：git branch 名字   在创建完分支后还是在master分支中</li><li>切换分支：git checkout 分支名</li><li>创建并切换分支：git checkout -b 分支名</li><li>合并分支：首先切换到master分支，然后执行git merge 分支名</li><li>删除分支：git branch -d 分支名</li><li>合并分支冲突：手动解决冲突，然后git add . 和git commit -m “解决了冲突”</li></ul><h4 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h4><ul><li>将分支提交到远程仓库：git push -u origin 分支名</li><li>查看远程分支：git remote show</li><li>将远程分支下载到本地：git checkout 分支名</li><li>删除远程分支：git push origin –delete 分支名</li></ul><h4 id="pull操作"><a href="#pull操作" class="headerlink" title="pull操作"></a>pull操作</h4><p><code>git pull</code>是从GitHub上下拉代码到本地仓库。<code>git clone</code>不也是可以从仓库中下载代码吗？这两者是有区别的，<code>git pull</code>是当你连接了仓库时可以使用，<code>git pull</code>是下拉最新的代码到本地；<code>git clone</code>是可以从所有仓库下载代码，就算你没有连接上仓库。</p><p>下面有一个<code>git pull</code>的使用场景</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/%E7%A9%BA%E7%99%BD.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技能学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
