<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git的简单使用</title>
      <link href="/2022/10/06/git-de-jian-dan-shi-yong/"/>
      <url>/2022/10/06/git-de-jian-dan-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>Git是一个分布式版本控制系统，分布式就是每个客户端都保存版本，当然服务器上也保存版本，但是当服务器发生问题时可以从客户端得到完整版本，不用担心版本丢失。</p><hr><p>设置账号名和邮箱，在将文件提交到仓库中时需要提供账号和邮箱，记录谁干了什么。</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;账号&quot;git config --global user.email &quot;邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>与Gitee绑定</strong></p><ul><li><p>生成密钥： <code>ssh-keygen -t rsa</code> 输入之后按下三次回车</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230657692.png" alt="image-20220726230657692"></p></li><li><p>查看密钥： <code>cat ~/.ssh/id_rsa.pub</code></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230729155.png"></p></li><li><p>Gitee中的ssh公钥：登录码云，将上面的密钥复制到ssh公钥中</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230757326.png" alt="image-20220726230757326"></p><p>这样本地仓库就和Gitee绑定了。</p></li></ul><p>Git的仓库可以从其他服务器上克隆一个或者将本地的一个文件夹作为新的仓库。</p><ul><li><p>克隆：git clone +远程仓库地址。将Gitee中的仓库地址复制，这样就把远程仓库复制到了本地</p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230808406.png" alt="image-20220726230808406"></p><ul><li>新的仓库：<ol><li>首先 git init 将本地仓库初始化</li><li>git remote add origin +远程仓库地址。这样本地仓库就和远程仓库关联起来</li></ol></li></ul><h4 id="Git的一些简单命令"><a href="#Git的一些简单命令" class="headerlink" title="Git的一些简单命令"></a>Git的一些简单命令</h4></li></ul><ol><li><p>将工作区文件添加到暂存区：git add +文件名 | git add .是全部文件</p></li><li><p>将暂存区文件添加到Git仓库：git commit -m “这里是对提交文件的描述，可以不写”</p></li><li><p>连接远程仓库：git remote add origin +远程仓库地址</p></li><li><p>将本地仓库中的文件提交到远程仓库(要在关联的情况下)：<code>git push origin master</code></p></li><li><p>查看状态：<code>git status | git status -s</code> 是简洁查看</p></li><li><p>查看提交记录：<code>git log</code></p><p><img src="https://dong-image.oss-cn-guangzhou.aliyuncs.com/image/image-20220726230814664.png" alt="image-20220726230814664"></p><p>上面划线的是提交版本ID</p></li><li><p>版本回退：</p><ul><li><code>git reset --hard head^</code> 回退到上个版本</li><li><code>git reset --hard head^^</code> 回退到上上个版本</li><li>git reset –hard +版本ID 回退到确定的版本</li></ul></li><li><p>在回退版本中查看提交记录：<code>git reflog</code></p></li><li><p>撤销工作区中修改：git checkout –文件名</p></li><li><p>取消暂存区中文件：git reset HEAD +文件名</p></li><li><p>从工作区直接到git仓库：git commit -a -m “描述”</p></li><li><p>删除文件：</p><ul><li>git rm -f 文件名   删除工作区和仓库的文件</li><li>git rm –cached 文件名   只删除仓库文件</li></ul></li><li><p>忽略文件：创建一个名为.gitignore的文件，在这个文件中定义不用提交的文件，提交时就不会提交对应的文件。</p></li></ol><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><p>开发项目时首先在master主分支创建自己的分支，自己负责的部分完成后将自己的分支合并到master主分支，这样每个人的工作没有相互影响。</p><ul><li>查看分支情况：git branch    前面有*的表示当前所在分支</li><li>创建分支：git branch 名字   在创建完分支后还是在master分支中</li><li>切换分支：git checkout 分支名</li><li>创建并切换分支：git checkout -b 分支名</li><li>合并分支：首先切换到master分支，然后执行git merge 分支名</li><li>删除分支：git branch -d 分支名</li><li>合并分支冲突：手动解决冲突，然后git add . 和git commit -m “解决了冲突”</li></ul><h4 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h4><ul><li>将分支提交到远程仓库：git push -u origin 分支名</li><li>查看远程分支：git remote show</li><li>将远程分支下载到本地：git checkout 分支名</li><li>删除远程分支：git push origin –delete 分支名</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技能学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/10/05/di-yi-pian-wen-zhang/"/>
      <url>/2022/10/05/di-yi-pian-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>人生啊</p><h3 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h3><ul><li><p>出生</p></li><li><p>爱情</p></li><li><p>变老</p></li><li><p>死亡</p></li></ul><hr><p>&#x3D;&#x3D;不想长大&#x3D;&#x3D;</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/05/hello-world/"/>
      <url>/2022/10/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
